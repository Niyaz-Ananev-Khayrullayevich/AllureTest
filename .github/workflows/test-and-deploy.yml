name: Test and Deploy Allure Reports

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests with pytest
      run: pytest --alluredir=allure-results
        
    - name: Generate Allure test report
      uses: andgineer/allure-report@v3.6
      id: allure-report
      if: always()
      with:
        allure-results: allure-results
        website: gh-pages-dir
        reports-site-path: builds/tests

    - name: Load test report history
      uses: actions/checkout@v3
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Build test report
      uses: simple-elf/allure-report-action@v1.7
      if: always()
      with:
        gh_pages: gh-pages
        allure_history: allure-history
        allure_results: build/allure-results

    - name: Publish test report
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages 
        publish_dir: allure-history
        
    # - name: Upload test results
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: allure-results
    #     path: allure-results/
        
    # - name: Upload allure report
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: allure-report
    #     path: allure-report/

  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
    
  #   permissions:
  #     contents: read
  #     pages: write
  #     id-token: write
      
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
    
  #   outputs:
  #     report_url: ${{ steps.deployment.outputs.page_url }}
      
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
      
  #   - name: Download allure report
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: allure-report
  #       path: allure-report/
        
  #   - name: Setup Pages
  #     uses: actions/configure-pages@v4
      
  #   - name: Upload to Pages
  #     uses: actions/upload-pages-artifact@v3
  #     with:
  #       path: allure-report/
        
  #   - name: Deploy to GitHub Pages
  #     id: deployment
  #     uses: actions/deploy-pages@v4

  #   - name: Show Allure Report URL
  #     run: echo "Allure Report is available at ${{ steps.deployment.outputs.page_url }}"

  # test-results-comment:
  #   needs: [test, deploy]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request'
    
  #   steps:
  #   - name: Add PR comment with Allure Report link
  #     uses: marocchino/sticky-pull-request-comment@v2
  #     with:
  #       header: allure-report
  #       message: |
  #         Tests finished.  
  #         Allure Report: ${{ needs.deploy.outputs.report_url }}