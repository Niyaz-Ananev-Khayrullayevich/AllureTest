name: Test and Deploy Allure Reports

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with pytest
      run: pytest --alluredir=allure-results

    - name: Upload allure results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results/

  deploy:
    runs-on: ubuntu-latest
    needs: test   # запускается только после test
    permissions:
      contents: write

    steps:
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages
        path: gh-pages

    - name: Download allure results
      uses: actions/download-artifact@v4
      with:
        name: allure-results
        path: allure-results

    - name: Install allure
      run: |
        sudo apt-get update
        sudo apt-get install -y allure

    - name: Generate Allure report
      run: allure generate allure-results -o allure-report --clean

    - name: Preserve history
      run: |
        mkdir -p allure-report/history
        if [ -d "gh-pages/history" ]; then
          cp -r gh-pages/history allure-report/
        fi

    - name: Publish test report
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./allure-report
